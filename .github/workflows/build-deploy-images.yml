# Builds and push images to GitHub container registry and deploy to AKS.

name: 'Build & deploy images'

on:
  push:
    branches: [ main ]

#  workflow_dispatch:


env:
  REGISTRY: ghcr.io
  MOODBOOSTER_TAG_PUSH: ghcr.io/vitaapp-s7/moodbooster-service
  USER_TAG_PUSH: ghcr.io/vitaapp-s7/user-service
  BADGE_TAG_PUSH: ghcr.io/vitaapp-s7/badge-service
  CHALLENGE_TAG_PUSH: ghcr.io/vitaapp-s7/challenge-service
  GATEWAY_TAG_PUSH: ghcr.io/vitaapp-s7/gateway
  FEED_TAG_PUSH: ghcr.io/vitaapp-s7/feed-service
  EVENT_TAG_PUSH: ghcr.io/vitaapp-s7/event-service

jobs:

  build_push_images:

    runs-on: ubuntu-latest
    name: Builds and pushes images

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: mvn clean package

      - name: Build & push gateway
        uses: docker/build-push-action@v2
        with:
          context: gateway
          push: true
          tags: |
            ${{ env.GATEWAY_TAG_PUSH }}:${{ github.sha }}
            ${{ env.GATEWAY_TAG_PUSH }}:latest

      - name: Build & push moodbooster
        uses: docker/build-push-action@v2
        with:
          context: services/moodbooster-service
          push: true
          tags: |
            ${{ env.MOODBOOSTER_TAG_PUSH }}:${{ github.sha }}
            ${{ env.MOODBOOSTER_TAG_PUSH }}:latest

      - name: Build & push user
        uses: docker/build-push-action@v2
        with:
          context: services/user-service
          push: true
          tags: |
            ${{ env.USER_TAG_PUSH }}:${{ github.sha }}
            ${{ env.USER_TAG_PUSH }}:latest

      - name: Build & push badge
        uses: docker/build-push-action@v2
        with:
          context: services/badge-service
          push: true
          tags: |
            ${{ env.BADGE_TAG_PUSH }}:${{ github.sha }}
            ${{ env.BADGE_TAG_PUSH }}:latest

      - name: Build & push challenge
        uses: docker/build-push-action@v2
        with:
          context: services/challenge-service
          push: true
          tags: |
            ${{ env.CHALLENGE_TAG_PUSH }}:${{ github.sha }}
            ${{ env.CHALLENGE_TAG_PUSH }}:latest


      - name: Build & push feed
        uses: docker/build-push-action@v2
        with:
          context: services/feed-service
          push: true
          tags: |
            ${{ env.FEED_TAG_PUSH }}:${{ github.sha }}
            ${{ env.FEED_TAG_PUSH }}:latest

      - name: Build & push event
        uses: docker/build-push-action@v2
        with:
          context: services/event-service
          push: true
          tags: | 
            ${{ env.EVENT_TAG_PUSH }}:${{ github.sha }}
            ${{ env.EVENT_TAG_PUSH }}:latest


# Automatisch deployen werkt voorlopig niet omdat we niet genoeg rechten hebben in Azure. Voor nu kunnen we handmatig deployen.
#
#  deploy:
#     permissions:
#       id-token: write
#       contents: read
#
#     needs: build_push_images
#     runs-on: ubuntu-latest
#     name: Deploy images to AKS
#
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#
#       - name: Set up kubelogin for non-interactive login
#         run: |
#           curl -LO https://github.com/Azure/kubelogin/releases/download/v0.0.9/kubelogin-linux-amd64.zip
#           sudo unzip -j kubelogin-linux-amd64.zip -d /usr/local/bin
#           rm -f kubelogin-linux-amd64.zip
#           kubelogin --version
#
#       - uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#       - name: Set AKS context
#         uses: azure/aks-set-context@v2.1
#         with:
#           cluster-name: VitaApp
#           resource-group: VitaApp-deploy
#           admin: false
#           use-kubelogin: true
#
#       - name: Deploy to AKS
#         uses: azure/k8s-deploy@v3.1
#         with:
#           action: deploy
#           manifests: |
#             deploy/kubernetes-deployment.yaml
#             deploy/pubsub.yaml
#             deploy/newUserSubscription.yaml
#             deploy/completeMoodbooster.yaml
